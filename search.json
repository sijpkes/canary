check (
    {
        "parse" : function(q, results, items) {
            if(typeof results === 'undefined') {
                return;
            }

            var sq = decodeURIComponent(q);
           // var i = innerText.indexOf();
            console.log("RESULTS");
            console.log(results);

            var o = typeof results === "string" ? JSON.parse(results) : results;
            var color = "";
            var res = results[0];

            //__J(results).each(function() {
                console.log(res);
                if(parseFloat(res.perc) > 20) {
                    color = "#FFCBA4";
                }

                if(parseFloat(res.perc) > 50) {
                    color = "orange";
                }

                if(parseFloat(res.perc) > 80) {
                    color = "red";
                }
                console.log(color);
               // var res = this;
                if(color.length > 0) {

                    __J(items).each(function() {
                        var t = __J(this).text();
                        var ind = t.indexOf(res.phrase);
                        var nphrase = "";
                        if(ind !== -1) {
                            nphrase = t.substring(ind, res.phrase.length);
                            nphrase = "<a href='"+res.link+"' style='color: "+color+"; cursor: pointer;' title='"+res.perc+"% match with "+res.displayLink+"'>"+nphrase+"</a>";

                            var ts = __J(this).html();
                            var ts = ts.replace(res.phrase, nphrase);

                            __J(this).html(ts);
                        }


                       // console.log(this);
                    });
                }
          //  });
        },
        "results" : %results%
    }
);
